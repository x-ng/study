1.数组
	var number = [];
	var numbers = new Array(1,2,3,4,5);
	var numbers = new Array(10);
	数组中的值可以不是同一种数据类型
	arrat.isArray();	判断是不是数组
	
	存取函数:
	indexOf();	查找
	split();	字符串数组操作
	join();		数组字符串话操作
	concat();	数组连接
	splice();	截取
2.列表
 listSize（属性）	列表的元素个数
 pos （属性） 		列表的当前位置 
 length （属性） 	返回列表中元素的个数 
 clear （方法）		清空列表中的所有元素 
 toString （方法） 	返回列表的字符串形式 
 getElement （方法）返回当前位置的元素 
 insert （方法） 	在现有元素后插入新元素 
 append （方法） 	在列表的末尾添加新元素 
 remove （方法） 	从列表中删除元素 
 front （方法） 	将列表的当前位置设移动到第一个元素 
 end （方法） 		将列表的当前位置移动到最后一个元素 prev（方法）		  将当前位置后移一位 
 next （方法） 		将当前位置前移一位 
 currPos （方法） 	返回列表的当前位置 
 moveTo（方法） 	将当前位置移动到指定位置

	2.1 append: 给列表添加元素
		function append(ele) {
			this.dataStore[this.listSize] = ele;
		}
	2.2 remove: 从列表中删除元素
		function remove (ele) {
			ver foundAt = this.find(ele);
			if (foundAt > -1) {
				this.dataStore.splice(foundAt,1);
				-- this.listSize;
				return ture;
			}
			return false;
		}
	2.3 find: 列表查找某一元素
		function find(ele) {
			for (var i = 0; i < this.dataStore.length; i++) {
				if (this.dataStore[i] == ele) {
					return i;
				}
			}
			return -1;
		}
	2.4 length: 多少个元素
		function length () {
			rerutn this.dataStore;
		}
	2.5 insert: 向列表中插入一个元素
		function insert (ele,after) {
			var insertPos = this.find(after);
			if (insertPos > -1) {
				this.dataStore.splice(insertPos+1,0,ele);
				++this.listSize;
				return true;
			}
			return false;
		}
	2.6 toString: 显示列表中的元素
		function toString () {
			return this.dataStore;
		}
	2.7 clear: 清空列表中的所有元素
		function clear () {
			delete this.dataStore;
			this.dataStore = [];
			this.listSize = this.pos = 0;
		}
	2.8 contains: 判断给定值是否在列表中
		function contains (ele) {
			for (var i = 0; i < this.dataStore.length; i++) {
				if (this.dataStore[i] == element) {
					return true;
				}
			}
			return false;
		}
	2.9 遍历数组
		function front () {
			this.pos = 0;
		}
		function end () {
			this.pos = this.listSize-1;
		}
		function prev () {
			if (this.pos > 0) {
				--this.pos;
			}
		}
		function next () {
			if (this.pos < this.listSize-1) {
				++this.pos;
			}
		}
		function currPos () {
			return this.pos;
		}
		function moveTo (postion) {
			this.pos = postion;
		}
		funciton getElement () {
			return this.dataStore[this.pos];
		}
		
		列表访问实例:
			var names = new List();
			names.append("01");
			names.append("02");
			names.append("03");
			names.append("04);
			names.append("05");
			names.append("06");
			names.append("07");
			names.append("08");
			
			names.front();
			console.log(names.getElement());
			names.next();
			console.log(names.getElement());
			names.prev();
			console.log(names.getElement());
			
			for (names.end(); names.currPos() >=0; names.prev()) {
				console.log(names.getElement());
			}
			
	
	
		
		
		
